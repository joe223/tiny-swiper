{"version":3,"file":"breakpoints.js","sources":["../../src/core/render/timing.ts","../../src/core/eventHub.ts","../../src/core/render/nextTick.ts","../../src/modules/breakpoints.ts"],"sourcesContent":["import {cancelNextFrame, nextFrame} from './nextTick'\n\ntype DebounceOptions = {\n    trailing: boolean\n}\n\nexport function now () {\n    return performance ? performance.now() : Date.now()\n}\n\nexport function debounce <T extends (...args: any) => any> (fn: T, threshold = 200, opt: DebounceOptions = {\n    trailing: true\n}): T {\n    let lastCallTime: DOMHighResTimeStamp = 0\n    let lastResult: ReturnType<T>\n    let lastTimer: NodeJS.Timer | undefined\n\n    return function (...args) {\n        const currTime = now()\n\n        if (currTime - lastCallTime >= threshold) {\n            lastCallTime = currTime\n            lastTimer = void 0\n            lastResult = fn(...args)\n        }\n\n        if (opt.trailing) {\n            lastTimer && clearTimeout(lastTimer)\n            lastTimer = setTimeout(() => fn(...args), threshold)\n        }\n\n        return lastResult\n    } as T\n}\n","export type EventHub = {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    on (evtName: string, cb: Function): void\n    off (evtName: string, cb: Function): void\n    emit (evtName: string, ...data: Array<any>): void\n    clear (): void\n}\n\nexport const LIFE_CYCLES = {\n    BEFORE_INIT: 'before-init',\n    AFTER_INIT: 'after-init',\n    BEFORE_SLIDE: 'before-slide',\n    SCROLL: 'scroll',\n    AFTER_SLIDE: 'after-slide',\n    BEFORE_DESTROY: 'before-destroy',\n    AFTER_DESTROY: 'after-destroy'\n}\n\nexport function EventHub (): EventHub {\n    let hub: {\n        [key: string]: Array<Function>\n    } = {}\n\n    function on (evtName: string, cb: Function): void {\n        if (!hub[evtName]) {\n            hub[evtName] = [cb]\n        } else {\n            hub[evtName].push(cb)\n        }\n    }\n\n    function off (evtName: string, cb: Function): void {\n        if (hub[evtName]) {\n            const index = hub[evtName].indexOf(cb)\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            index > -1 && hub[evtName].splice(index, 1)\n        }\n    }\n\n    function emit (evtName: string, ...data: Array<any>): void {\n        if (hub[evtName]) {\n            hub[evtName].forEach(cb => cb(...data))\n        }\n    }\n\n    function clear (): void {\n        hub = {}\n    }\n\n    return {\n        on,\n        off,\n        emit,\n        clear\n    }\n}\n","import { now } from './timing'\n\nexport type Tick = {\n    run (cb: (interval: DOMHighResTimeStamp) => void): void\n    stop (): void\n}\n\nexport const nextFrame = requestAnimationFrame || webkitRequestAnimationFrame || setTimeout\nexport const cancelNextFrame = cancelAnimationFrame || webkitCancelAnimationFrame || clearTimeout\n\nexport function Tick (): Tick {\n    let startTime: number | undefined\n    let id: number\n\n    function run (cb: (interval: DOMHighResTimeStamp) => void): void {\n        // eslint-disable-next-line no-void\n        startTime = startTime === void 0\n            ? now()\n            : startTime\n\n        // Why do not use callback argument:\n        // https://stackoverflow.com/questions/50895206/exact-time-of-display-requestanimationframe-usage-and-timeline\n        id = nextFrame(() => {\n            const timeStamp = now()\n            const interval = timeStamp - <number>startTime\n\n            startTime = timeStamp\n            cb(interval)\n        })\n    }\n\n    function stop (): void {\n        startTime = undefined\n        cancelNextFrame(id)\n    }\n\n    return {\n        run,\n        stop\n    }\n}\n","import { debounce } from '../core/render/timing'\nimport { Options, UserOptions } from '../core/options'\nimport { SwiperInstance, SwiperPlugin } from '../core/index'\nimport { LIFE_CYCLES } from '../core/eventHub'\nimport { nextFrame } from '../core/render/nextTick'\n\nexport type SwiperPluginBreakpointsInstance = {\n    update (): void\n}\nexport type SwiperPluginBreakpointsOptions = {\n    [key in number]: UserOptions\n}\n\n/**\n * TinySwiper plugin for breakpoints.\n *\n * @param {SwiperInstance} instance\n * @param {Options}\n */\nexport default <SwiperPlugin>function SwiperPluginBreakpoints (\n    instance: SwiperInstance & {\n        breakpoints?: SwiperPluginBreakpointsInstance\n    },\n    options: Options & {\n        breakpoints?: SwiperPluginBreakpointsOptions\n        breakpointsBase?: string\n    }\n): void {\n    const isEnabled = Boolean(options.breakpoints)\n    const breakpoints: SwiperPluginBreakpointsInstance = {\n        update (): void {\n            \n            if (!options.breakpoints) return \n\n            for (const [breakpoint, values] of Object.entries(options.breakpoints)) {\n                if ('window' === options.breakpointsBase) {\n                    if (window.matchMedia(`(min-width: ${breakpoint}px)`).matches) {\n                        instance.options = Object.assign(instance.options, values)\n                    }\n                } else if (+breakpoint <= instance.env.element.$el.offsetWidth) {\n                    instance.options = Object.assign(instance.options, values)\n                }\n            }\n            nextFrame(instance.updateSize)\n        }\n    }\n\n    if (!isEnabled) return\n\n    const resizeListener = debounce(breakpoints.update, 200) // the default timeout is 200ms\n\n    instance.on(LIFE_CYCLES.AFTER_INIT, () => {\n        instance.breakpoints = breakpoints\n        window.addEventListener('resize', resizeListener, { passive: true })\n    })\n    instance.on(LIFE_CYCLES.BEFORE_DESTROY, () => {\n        window.removeEventListener('resize', resizeListener)\n    })\n}"],"names":["now","performance","Date","debounce","fn","threshold","opt","trailing","lastCallTime","lastResult","lastTimer","args","currTime","clearTimeout","setTimeout","LIFE_CYCLES","BEFORE_INIT","AFTER_INIT","BEFORE_SLIDE","SCROLL","AFTER_SLIDE","BEFORE_DESTROY","AFTER_DESTROY","nextFrame","requestAnimationFrame","webkitRequestAnimationFrame","cancelNextFrame","cancelAnimationFrame","webkitCancelAnimationFrame","SwiperPluginBreakpoints","instance","options","isEnabled","Boolean","breakpoints","update","Object","entries","breakpoint","values","breakpointsBase","window","matchMedia","matches","assign","env","element","$el","offsetWidth","updateSize","resizeListener","on","addEventListener","passive","removeEventListener"],"mappings":"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"}